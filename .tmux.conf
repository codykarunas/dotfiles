# .tmux.conf
# Swap panes: swap-panes -U

set -g focus-events on

set -g default-terminal 'tmux-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# set-option -g default-shell /usr/local/bin/fish
set-option -g default-terminal "screen-256color"
# set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

setw -g mode-keys vi

# set-option -g mouse on
set-option -g status-interval 1
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

# unbind C-b
set -g prefix C-s

# prefix a
bind-key a send-prefix

bind -Tcopy-mode WheelUpPane send -N1 -X scroll-up
bind -Tcopy-mode WheelDownPane send -N1 -X scroll-down
unbind -T copy-mode-vi MouseDragEnd1Pane
# -------------------------------------------------------------------
# fzf integration
# -------------------------------------------------------------------
# Tmux completion
bind-key -n 'M-t' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(tmuxwords.rb --all --scroll 1000 --min 5 | fzf --multi | paste -sd\\  -)\"'"

# fzf-locate (all)
bind-key -n 'M-`' run "tmux split-window -p 40 'tmux send-keys -t #{pane_id} \"$(locate / | fzf -m | paste -sd\\  -)\"'"

# bind z send-keys C-s
# bind C-s last-window

bind | split-window -h
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind ` select-window -t 0

# Resize the current pane using option (meta) + direction
# REF: https://unix.stackexchange.com/questions/81782/how-can-i-create-a-shortcut-to-resize-panes-in-a-tmux-window
# bind -n M-k resize-pane -U 1
# bind -n M-j resize-pane -D 1
# bind -n M-h resize-pane -L 1
# bind -n M-l resize-pane -R 1

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-
bind-key -n M-Up resize-pane -U 1
bind-key -n M-Down resize-pane -D 1
bind-key -n M-Left resize-pane -L 1
bind-key -n M-Right resize-pane -R 1

# Use up and down arrows for temporary "maximize"
unbind Up; bind Up resize-pane -Z; unbind Down; bind Down resize-pane -Z

# Copy/paste interop
# bind C-c run "tmux show-buffer | reattach-to-user-namespace pbcopy"
# bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# keybindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle \; send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Mouse options for tmux >= 2.5
set-option -g -q mouse on
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind-key -T copy-mode-vi WheelUpPane send-keys -X halfpage-up
bind-key -T copy-mode-vi WheelDownPane send-keys -X halfpage-down

# if-shell '[[ -e ~/.tmux.conf.local ]]' 'source-file ~/.tmux.conf.local'

# Start new pane with the current directory
bind-key c new-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# copy-mode
# REF: https://github.com/junegunn/dotfiles/blob/master/tmux.conf
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key y send-keys C-l C-a \; run-shell 'sleep 0.25' \;\
    copy-mode \; send-keys -X begin-selection \;\
    send-keys -X -N 100 'cursor-down' \;\
    send-keys -X 'end-of-line' \;\
    send-keys -X 'previous-word' \;\
    send-keys -X 'next-word-end' \;\
    send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" \;\
    send-keys C-e \;\
    display-message "Line copied"

######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

# panes
# set -g pane-border-style 'fg=colour19 bg=colour0'
# set -g pane-active-border-style 'bg=colour0 fg=colour9'
set -g pane-border-style 'fg=colour51 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour51'

# statusbar
set -g status-position bottom
set -g status-justify left
# set -g status-style 'bg=colour18 fg=colour137 dim'
set -g status-style 'bg=colour233 fg=colour137 dim'
set -g status-left ''
set -g status-right '#[fg=colour250,bg=colour234] %d/%m #[fg=colour250,bg=colour235] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

# setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
setw -g window-status-current-style 'fg=colour51 bg=colour234 bold'
setw -g window-status-current-format ' #I#[fg=colour51]:#[fg=colour231]#W#[fg=colour51]#F '

# setw -g window-status-style 'fg=colour9 bg=colour18'
setw -g window-status-style 'fg=colour51 bg=colour235'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# messages
set -g message-style 'fg=colour232 bg=colour16 bold'
